name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., patch, minor, major, or specific version)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      prerelease:
        description: 'Is this a prerelease?'
        required: true
        default: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TELEMETRY_DISABLED: 1

    strategy:
      matrix:
        node-version: ['lts/-2', 'lts/-1', 'lts/*']
      fail-fast: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: |
          NODE_ENV=development pnpm install --frozen-lockfile
          pnpm husky install

      - name: Cache Turborepo
        uses: actions/cache@v4
        with:
          path: |
            .turbo
            node_modules/.cache/turbo
            node_modules/.cache/tsc
            node_modules/.cache/biome
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Validate
        run: pnpm turbo lint typecheck build test
        env:
          NODE_ENV: production
          VITEST_SEGFAULT_RETRY: 3

  publish:
    needs: validate
    runs-on: ubuntu-latest
    timeout-minutes: 5
    environment:
      name: release
      url: https://www.npmjs.com/package/@model-context-protocol/core

    permissions:
      contents: write
      id-token: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'

      - name: Install dependencies
        run: NODE_ENV=development pnpm install --frozen-lockfile

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update root version
        run: |
          pnpm version ${{ github.event.inputs.version }} --no-git-tag-version
          VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Version packages
        run: |
          cd packages/core
          pnpm version ${NEW_VERSION} --no-git-tag-version
          cd ../..
          git add .
          git commit -m "chore: release v${NEW_VERSION}"
          git tag "v${NEW_VERSION}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.NEW_VERSION }}
          name: Release v${{ env.NEW_VERSION }}
          draft: false
          prerelease: ${{ github.event.inputs.prerelease }}
          generate_release_notes: true

      - name: Setup npmjs.org registry
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
          echo "registry=https://registry.npmjs.org/" >> .npmrc
          echo "always-auth=true" >> .npmrc
          NODE_ENV=production pnpm publish --access public --provenance --no-git-checks ${PUBLISH_TAG:+--tag ${PUBLISH_TAG}}
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          PUBLISH_TAG: ${{ github.event.inputs.prerelease == 'true' && 'next' || '' }}
          NPM_CONFIG_PROVENANCE: true

      - name: Setup GitHub registry
        run: |
          echo "//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}" > .npmrc
          echo "registry=https://npm.pkg.github.com/" >> .npmrc
          echo "always-auth=true" >> .npmrc
          NODE_ENV=production pnpm publish --no-git-checks ${PUBLISH_TAG:+--tag ${PUBLISH_TAG}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_TAG: ${{ github.event.inputs.prerelease == 'true' && 'next' || '' }}

      - name: Push changes
        run: |
          git push origin HEAD:${{ github.ref }}
          git push origin "v${{ env.NEW_VERSION }}"
